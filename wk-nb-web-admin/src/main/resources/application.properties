nutz.application.name=wk-nb-web-admin
server.port=9527
server.host=0.0.0.0

jetty.contextPath=/
jetty.threadpool.idleTimeout=60000
jetty.threadpool.minThreads=10
jetty.threadpool.maxThreads=200
jetty.page.403=/403/index.html
#结合ftp使用,或用nginx代理ftp路径
jetty.staticPath=/data/files
#开发模式静态资源
#jetty.staticPathLocal=D://budwk-nutzboot/wk-nb-web-admin/src/main/resources/static



redis.host=127.0.0.1
redis.port=6379
redis.timeout=2000
redis.max_redir=10
redis.database=0
redis.maxTotal=100
redis.pool.maxTotal=100
redis.pool.maxIdle=50
redis.pool.minIdle=10
#redis.password=test123
#redis集群模式设置 redis.mode=cluster
redis.mode=normal
#redis.nodes=


#跨站拦截和SQL注入拦截忽略路径
budwk.xsssql.ignore.urls=/api/1.0.0/platform/sys/lang/create_or_update,/api/1.0.0/platform/sys/app/conf/create,/api/1.0.0/platform/sys/app/conf/update

#文件上传方式 ftp=ftp 此时需配置ftp.enabled=true || file=本地文件
budwk.upload.type=file
#是否启用跨域请求
budwk.access.allow.origin.enabled=true
#允许跨域的域名,* 为所有
budwk.access.allow.origin.domain=*
budwk.access.allow.origin.maxage=3600

swagger.enable=true
swagger.scanner.package=com.budwk.nb.web.controllers
swagger.info.title=BudWk V6 API
swagger.info.version=1.0.0
swagger.info.contact.name=大鲨鱼
swagger.info.contact.email=wizzer@qq.com

#ftp配置内容,可根据需要自己实现文件服务器的客户端
ftp.enabled=false
ftp.host=127.0.0.1
ftp.port=21
ftp.username=ftpwk
ftp.password=ftpwk
ftp.timeout=30

#shiro.ini.path=shiro.ini
shiro.objects=platformAuthc,platformRealm,authenticationStrategy
#end
shiro.ini.urls:
/platform/login/login=anon
/platform/login/captcha=anon
/assets/**=anon
/**=anon
/platform/swagger/swagger.json=platformAuthc
/platform/**=platformAuthc
#end
#设置session会话超时时间(单位:毫秒)
shiro.session.manager.globalSessionTimeout=3600000
#设置redis缓存时间(单位:秒)与上面的毫秒数保持一致
shiro.session.cache.redis.ttl=3600
#缓存名和 RedisConstant.PLATFORM_REDIS_PREFIX 常量保持一致
shiro.session.dao.activeSessionsCacheName=budwk:shiro:activeSessionCache
#使用redis二级缓存
shiro.session.cache.type=lcache
shiro.session.enable=true
shiro.url.login=/platform
shiro.url.logout_redirect=/platform
shiro.url.unauth=/platform

#dubbo.application.name 若名称不写则取 nutz.application.name
dubbo.registry.address=nacos://127.0.0.1:8848
#dubbo.protocol.name=dubbo
#随机端口
dubbo.protocol.port=0
dubbo.consumer.timeout=300000
dubbo.consumer.retries=0
#默认关闭QOS服务
dubbo.application.qos.enable=false

nacos.config.server-addr=127.0.0.1:8848
#命名空间ID,不填默认public
#nacos.config.namespace=
#data-id 默认取值 nutz.application.name
#nacos.config.data-id=
nacos.config.group=DEFAULT_GROUP
nacos.config.data-type=properties

#流控使用说明 https://github.com/nutzam/nutzboot/tree/dev/nutzboot-starter/nutzboot-starter-sentinel-dubbo
#是否启用 sentinel 客户端
sentinel.enabled=false
#控制台地址
sentinel.csp.sentinel.dashboard.server=localhost:9090
#sentinel客户端端口,0为随机端口
#注意:使用集群流控功能时,重启jar后因端口变动导致规则失效,建议使用固定端口号
sentinel.csp.sentinel.api.port=0
#sentinel客户端通信间隔毫秒数
sentinel.csp.sentinel.heartbeat.interval.ms=3000
#sentinel客户端本地IP地址,不设置则自动获取
sentinel.csp.sentinel.heartbeat.client.ip=

#规则存储的key名
sentinel.rulekey=sentinel:wk-nb-web-admin
#规则存储的发布订阅频道名
sentinel.channel=sentinel-nb-web-admin

#缓存名前缀,微服务模块都一致才能统一在应用管理中显示,首节字符串和 RedisConstant.PLATFORM_REDIS_PREFIX 常量保持一致
logback.exts.loglevel.cache.prefix=budwk:logback:loglevel:
#动态修改日志等级
logback.exts.loglevel.enabled=true
#心跳间隔(单位:秒)
logback.exts.loglevel.heartbeat=10

#为应用管理提供支持,启用获取部署版本号,结合守护进程使用
# 详见 https://github.com/budwk/budwk-daemon-python
logback.exts.deploy.enabled=false
#为应用管理提供支持,部署根路径
logback.exts.deploy.root=/data/wk
