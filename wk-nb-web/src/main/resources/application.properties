nutz.application.name=wk-nb-web
server.port=9527
server.host=0.0.0.0

jdbc.url=jdbc:mysql://127.0.0.1:3306/budwk_v6_mini?useUnicode=true&characterEncoding=utf8&useSSL=false
jdbc.username=root
jdbc.password=root
jdbc.validationQuery=select 1
jdbc.maxActive=10
jdbc.testWhileIdle=true
jdbc.connectionProperties=druid.stat.slowSqlMillis=2000
jdbc.defaultAutoCommit=true

# mongo=存mongodb / db=存数据库
slog.db.type=db

jetty.contextPath=/
jetty.threadpool.idleTimeout=60000
jetty.threadpool.minThreads=10
jetty.threadpool.maxThreads=200
jetty.page.403=/403/index.html
#结合ftp使用,或用nginx代理ftp路径
jetty.staticPath=/data/files
#开发模式静态资源
#jetty.staticPathLocal=D://budwk-nutzboot-mini/wk-nb-web-admin/src/main/resources/static

redis.host=127.0.0.1
redis.port=6379
redis.timeout=2000
redis.max_redir=10
redis.database=0
redis.maxTotal=100
redis.pool.maxTotal=100
redis.pool.maxIdle=50
redis.pool.minIdle=10
#redis.password=test123
#redis集群模式设置 redis.mode=cluster
redis.mode=normal
#redis.nodes=


#跨站拦截和SQL注入拦截忽略路径
budwk.xsssql.ignore.urls=/api/1.0.0/platform/sys/lang/create_or_update,/api/1.0.0/platform/sys/app/conf/create,/api/1.0.0/platform/sys/app/conf/update

#文件上传方式 ftp=ftp 此时需配置ftp.enabled=true || file=本地文件
budwk.upload.type=file
#是否启用跨域请求
budwk.access.allow.origin.enabled=true
#允许跨域的域名,* 为所有
budwk.access.allow.origin.domain=*
budwk.access.allow.origin.maxage=3600

swagger.enable=true
swagger.scanner.package=com.budwk.nb.web.controllers
swagger.info.title=BudWk V6 API
swagger.info.version=1.0.0
swagger.info.contact.name=大鲨鱼
swagger.info.contact.email=wizzer@qq.com

#ftp配置内容,可根据需要自己实现文件服务器的客户端
ftp.enabled=false
ftp.host=127.0.0.1
ftp.port=21
ftp.username=ftpwk
ftp.password=ftpwk
ftp.timeout=30

#shiro.ini.path=shiro.ini
shiro.objects=platformAuthc,platformRealm,authenticationStrategy
#end
shiro.ini.urls:
/platform/login/login=anon
/platform/login/captcha=anon
/assets/**=anon
/**=anon
/platform/swagger/swagger.json=platformAuthc
/platform/**=platformAuthc
#end
#设置session会话超时时间(单位:毫秒)
shiro.session.manager.globalSessionTimeout=3600000
#设置redis缓存时间(单位:秒)与上面的毫秒数保持一致
shiro.session.cache.redis.ttl=3600
#使用redis二级缓存
shiro.session.cache.type=lcache
shiro.session.enable=true
shiro.url.login=/platform
shiro.url.logout_redirect=/platform
shiro.url.unauth=/platform

#dubbo.application.name 若名称不写则取 nutz.application.name
dubbo.registry.address=zookeeper://127.0.0.1:2181
#dubbo.protocol.name=dubbo
#随机端口
dubbo.protocol.port=0
dubbo.consumer.timeout=300000
dubbo.consumer.retries=0
#默认关闭QOS服务
dubbo.application.qos.enable=false


#==============================================================
#Configure Main Scheduler Properties
#==============================================================
#quartz延迟启动秒数
quartz.startupDelay=10
quartz.scheduler.instanceName = defaultScheduler
quartz.scheduler.instanceId = AUTO

#==============================================================
#Configure JobStore     isClustered=启用集群模式
#==============================================================
quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
#quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.oracle.OracleDelegate
#Other delegates can see: http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/tutorial-lesson-09.html
quartz.jobStore.dataSource=myDS
quartz.jobStore.tablePrefix = SYS_QRTZ_
quartz.jobStore.isClustered = true
quartz.jobStore.clusterCheckinInterval = 20000
quartz.jobStore.maxMisfiresToHandleAtATime = 120
quartz.jobStore.misfireThreshold = 120000
quartz.jobStore.txIsolationLevelSerializable = false

#==============================================================
#Configure ThreadPool
#==============================================================
quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
quartz.threadPool.threadCount = 2
quartz.threadPool.threadPriority = 5
quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

#==============================================================
#Skip Check Update
#update:true
#not update:false
#==============================================================
quartz.scheduler.skipUpdateCheck = true

#============================================================================
# Configure Plugins
#============================================================================
quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingJobHistoryPlugin
quartz.plugin.shutdownhook.class = org.quartz.plugins.management.ShutdownHookPlugin
quartz.plugin.shutdownhook.cleanShutdown = true
#============================================================================
# NutDao dataSource
#============================================================================
quartz.dataSource.myDS.connectionProvider.class = com.budwk.nb.task.commons.ext.NutConnectionProvider
